{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","pdf.ts","components/Keyboard.tsx","components/MatchedText.tsx","hooks/use-flag.ts","deferred.ts","hooks/use-keybindings.ts","components/QuickPick.tsx","hooks/use-quick-pick-logic.ts","text-filters.ts","components/CommandPaletteContext.tsx","components/OutlineSelectorContext.tsx","components/InputBoxContext.tsx","components/DropFileArea.tsx","commands.ts","components/LandingPage.tsx","components/SideBar.tsx","components/PageRenderer.tsx","keybindings.ts","scroll.ts","components/KFPDFViewer.tsx","env.ts","hooks/use-repeat-command.ts","components/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","outlineNodeToPageNumber","a","pdf","outlineNode","dest","getDestination","Error","ref","getPageIndex","pageIndex","getPageText","page","getTextContent","tokenizedText","pageText","items","map","token","str","join","getPdfTexts","promises","Array","numPages","fill","_","idx","getPage","Promise","all","keyboardStyle","margin","padding","backgroundColor","border","borderRadius","boxShadow","fontSize","Keyboard","keys","strList","style","MatchedText","text","matchedIndexes","matchedIndexSet","Set","split","s","isMatched","has","color","fontWeight","useFlag","initialValue","useState","value","setValue","set","on","useCallback","off","toggle","currentValue","Deferred","promise","_resolve","_reject","resolve","reject","reason","this","useKeybindings","keybindings","commandCallbacks","commands","bindGlobal","enabled","onBeforeCommand","onAfterCommand","commandCallbacksRef","useRef","current","useEffect","forEach","command","mousetrap","event","preventDefault","bind","unbind","modalStyles","content","top","left","right","bottom","marginRight","transform","width","height","overflow","boxSizing","titleStyle","inputStyle","listStyle","listStyleType","listItemStyle","borderBottom","_QuickPickPresentational","title","placeHolder","isOpen","selectedIndex","onClose","onTextChange","onMouseDownOutside","renderItem","parentSelector","onMouseDown","onRequestClose","contentLabel","autoFocus","onChange","type","placeholder","item","name","QuickPickPresentational","React","memo","QUICK_PICK_COMMANDS","quickPickKeybindings","cancelQuickPick","selectItemQuickPick","nextItemQuickPick","previousItemQuickPick","createQuickPickContext","textFilter","QuickPickContext","createContext","showQuickPick","QuickPickProvider","modalAppElement","children","ReactModal","setAppElement","deferredRef","setItems","setPlaceHolder","setTitle","inputText","setInputText","setSelectedIndex","isOpenOn","isOpenOff","matchedItems","setMatchedItems","open","close","select","selectedItem","chanegeInputText","newInputText","nextItem","prev","Math","min","length","previousItem","max","newMatchedItems","push","useQuickPickLogic","target","options","deferred","console","log","callbacks","useMemo","quickPickGlobals","Provider","textFilterMap","substringFilter","pattern","index","indexOf","i","regexFilter","result","foundedStr","undefined","err","fuzzyFilter","indexes","c","createTextFilter","textFilterKind","ignoreCase","toLowerCase","itemStyle","itemStyleSelected","isSelected","CommandPaletteContext","CommandPaletteProvider","OutlineSelectorContext","OutlineSelectorProvider","promptStyle","InputBoxPresentational","prompt","INPUT_BOX_COMMANDS","inputBoxKeybindings","cancelInputBox","confirmInputBox","InputBoxContext","showInputBox","InputBoxProvider","setPrompt","inputBoxGlobals","createInputBoxContext","fileDropAreaStyle","position","DropFileArea","onDropFile","accept","dropzoneRef","useDropzone","noKeyboard","noClick","maxFiles","onDrop","acceptedFiles","getRootProps","getInputProps","onClick","stopPropagation","COMMANDS","commandToTitle","replace","v","toUpperCase","landingPageStyle","background","tableStyle","borderCollapse","theadStyle","thStyle","trStyle","tdStyle","LandingPage","commandPaletteOpen","fileOpen","MemorizedOutline","Outline","SideBarStyle","zIndex","SideBar","onItemClick","onLoadSuccess","display","MemorizedPage","Page","highlightPattern","splitText","matches","reduce","arr","element","PageRenderer","data","scale","rotate","isKeywordHighlighted","keyword","paddingSize","isScrolling","pageWidth","textRenderer","parseFloat","pageNumber","customTextRenderer","onLoadError","error","message","onRenderError","onGetTextError","renderTextLayer","renderAnnotationLayer","renderInteractiveForms","defaultKeybindings","keysJsonSchema","base","properties","createKeybindingsJsonSchema","Validator","doNothing","fullScreenOn","fullScreenOff","fullScreenToggle","showInfoOn","showInfoOff","showInfoToggle","prevPage","nextPage","firstPage","lastPage","goToPage","zoomReset","zoomIn","zoomOut","zoomFitWidth","zoomFitHeight","scrollLeft","scrollRight","scrollUp","scrollDown","scrollHalfPageDown","scrollHalfPageUp","scrollTop","scrollBottom","scrollReset","rotateRight","rotateLeft","colorInvert","invertColorRateUp","invertColorRateDown","highlightToggle","sidebarToggle","goToOutline","goToOutlineRecursive","search","searchNext","searchPrev","pickSearchList","forwardPageHistory","backwardPageHistory","animationHandlers","cancelRepeatFunc","handler","id","cancelAnimationFrame","startScroll","container","scrollOptions","func","requestAnimationFrame","loop","repeatFunc","scrollBy","KFPDFViewer","fullScreenCommandCallbacks","scrollStep","scrollHalfPageStep","scaleMax","scaleMin","scaleStep","invertColorRateStep","setPdf","outline","setOutline","url","setUrl","setNumPages","setRotate","setScale","pageWidthRaw","setPageWidthRaw","pageHeightRaw","setPageHeightRaw","isSidebarOpen","setIsSidebarOpen","isColorInverted","setIsColorInverted","invertColorRate","setInvertColorRate","process","showInfo","setShowInfo","setIsScrolling","scrollOffset","setScrollOffset","setKeyword","setIsKeywordHighlighted","pdfTexts","setPdfTexts","keywordHitPages","setKeywordHitPages","listRef","listOuterRef","startListOuterScroll","offset","docRef","commandPalette","useContext","outlineSelector","inputBox","isModalOpen","every","mdl","repeatCount","setRepeatCount","keypressHandler","includes","key","num","Number","currentRepeatCount","keyupHandler","document","addEventListener","removeEventListener","useRepeatCommand","resetRepeatCount","repeatCount1","pageHeight","itemSize","recursive","targetPageNumber","jumpPage","hittedPages","filter","alert","direction","tmpPageNumber","currentPageNumber","step","forward","backward","pop","stopScroll","floor","isInteger","scrollToItem","scrollMax","notImplemented","scrollTo","itemData","file","URL","createObjectURL","inputRef","view","x1","y1","x2","y2","cMapUrl","cMapPacked","loading","itemCount","overscanCount","onScroll","outerRef","JSON","stringify","pdfLoaded","App","modalRootRef","fullScreen","setFullScreen","documentElement","clientWidth","screenWidth","setScreenWidth","clientHeight","screenHeight","setScreenHeight","onResize","debounce","fullScrenHandle","useFullScreenHandle","enter","exit","divStyle","body","handle","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.912cda01.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type {\n  PDFDocumentProxy,\n  PDFPageProxy,\n} from 'pdfjs-dist/types/display/api';\n\n\ntype PromiseResultType<T> = T extends Promise<infer U> ? U : never;\ntype ReturnType<T> = T extends (...args: any[]) => infer R ? R : never;\ntype ArrayItemType<T> = T extends (infer U)[] ? U : never;\n\ntype GetOutlineType = PDFDocumentProxy['getOutline'];\ntype GetOutlineReturnType = ReturnType<GetOutlineType>;\ntype GetOutlinePromiseResultType = PromiseResultType<GetOutlineReturnType>;\n\ntype OutlineNode = ArrayItemType<GetOutlinePromiseResultType>;\ntype OutlineDest = OutlineNode['dest'];\n\nconst outlineNodeToPageNumber = async ({\n  pdf,\n  outlineNode,\n}: {\n  pdf: PDFDocumentProxy;\n  outlineNode: OutlineNode;\n}): Promise<number> => {\n  // TODO: improve\n  let dest: any[] | null;\n  if (typeof outlineNode.dest === 'string') {\n    dest = await pdf.getDestination(outlineNode.dest);\n  } else {\n    dest = outlineNode.dest;\n  }\n  if (!dest) {\n    throw Error(`can not get destination: ${dest}`);\n  }\n  const ref = dest[0];\n  const pageIndex = await pdf.getPageIndex(ref);\n  return pageIndex + 1;\n};\n\nconst getPageText = async (page: PDFPageProxy): Promise<string> => {\n  const tokenizedText = await page.getTextContent();\n  const pageText = tokenizedText.items\n    .map(token => (token as any).str || '')\n    .join('');\n  return pageText;\n};\n\nconst getPdfTexts = async (pdf: PDFDocumentProxy): Promise<string[]> => {\n  const promises = new Array(pdf.numPages)\n    .fill(null)\n    .map(async (_, idx) => getPageText(await pdf.getPage(idx + 1)));\n  return await Promise.all(promises);\n};\n\nexport {\n  outlineNodeToPageNumber,\n  getPageText,\n  getPdfTexts,\n};\n\nexport type {\n  PDFDocumentProxy,\n  OutlineNode,\n  OutlineDest,\n};\n","import {\n  FC,\n  CSSProperties,\n} from 'react';\n\nimport {\n  Keys,\n} from '../keybindings';\n\nconst keyboardStyle: CSSProperties = {\n  margin: '3px 5px',\n  padding: '1px 3px',\n  backgroundColor: '#f9f9f9',\n  border: '1px solid #aaa',\n  borderRadius: '2px',\n  boxShadow: '1px 2px 2px #ddd',\n  fontSize: '0.85em',\n};\n\nconst Keyboard: FC<{keys: Keys}> = ({keys}: {keys: Keys}) => {\n  const strList: string[] =\n    keys === null\n    ? []\n    : typeof keys === 'string'\n    ? [keys]\n    : keys;\n\n  return (\n    <>\n      {\n        strList.map((str) => (\n          <span\n            key={str}\n            style={keyboardStyle}\n          >\n            {str}\n          </span>\n        ))\n      }\n    </>\n  );\n};\n\nexport {\n  Keyboard,\n};\n","import {\n  FC,\n  CSSProperties,\n} from 'react';\n\nconst MatchedText: FC<{text: string; matchedIndexes: number[]}> = ({\n  text,\n  matchedIndexes,\n}) => {\n  const matchedIndexSet = new Set(matchedIndexes);\n  return (\n    <>\n      {\n        text\n        .split('')\n        .map((s, idx) => {\n          const isMatched = matchedIndexSet.has(idx);\n          const style: CSSProperties = {\n            color: isMatched ? 'coral' : '#333',\n            fontWeight: isMatched ? 'bold' : 'normal',\n          };\n          return (\n            <span\n              key={idx}\n              style={style}\n            >\n              {s}\n            </span>\n          )\n        })\n      }\n    </>\n  );\n};\n\nexport {\n  MatchedText,\n};\n","import {useState, useCallback} from 'react';\n\nconst useFlag = (initialValue: boolean) => {\n  const [value, setValue] = useState(initialValue);\n\n  const callbacks = {\n    set: setValue,\n\n    on: useCallback(() => {\n      setValue(true);\n    }, []),\n\n    off: useCallback(() => {\n      setValue(false);\n    }, []),\n\n    toggle: useCallback(() => {\n      setValue((currentValue) => !currentValue);\n    }, []),\n  } as const;\n\n  return [value, callbacks] as const;\n};\n\nexport {\n  useFlag,\n};\n","class Deferred<T> {\n  promise: Promise<T>;\n  _resolve: (value: T) => void;\n  _reject: (reason?: any) => void;\n\n  constructor() {\n    this._resolve = () => {\n      throw Error('_resolve is not initialized yet');\n    };\n    this._reject = () => {\n      throw Error('_reject is not initialized yet');\n    };\n    this.promise = new Promise<T>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve = (value: any) => this._resolve(value);\n  reject = (reason?:any) => this._reject(reason);\n}\n\nexport {\n  Deferred,\n};\n","import {useEffect, useRef} from 'react';\nimport mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\n\nimport type {\n  Keys,\n} from '../keybindings';\n\nconst useKeybindings = <AllCommandList extends readonly string[]>({\n  keybindings,\n  commandCallbacks,\n  commands,\n  bindGlobal = false,\n  enabled = true,\n  onBeforeCommand,\n  onAfterCommand,\n}: {\n  keybindings: Record<AllCommandList[number], Keys>;\n  commandCallbacks: Record<AllCommandList[number], () => unknown>;\n  commands: AllCommandList;\n  bindGlobal?: boolean;\n  enabled?: boolean;\n  onBeforeCommand?: (command: AllCommandList[number]) => void;\n  onAfterCommand?: (command: AllCommandList[number]) => void;\n}) => {\n  const commandCallbacksRef = useRef(commandCallbacks);\n  commandCallbacksRef.current = commandCallbacks;\n\n  useEffect(() => {\n    if (!enabled) return;\n    commands.forEach((command: AllCommandList[number]) => {\n      const keys = keybindings[command];\n      if (keys) {\n        // console.log('key bind', keys, command);\n        if (bindGlobal) {\n          mousetrap.bindGlobal(\n            keys,\n            (event) => {\n              event.preventDefault();\n              onBeforeCommand?.(command);\n              commandCallbacksRef.current[command]?.();\n              onAfterCommand?.(command);\n            }\n          );\n        } else {\n          mousetrap.bind(\n            keys,\n            (event) => {\n              event.preventDefault();\n              onBeforeCommand?.(command);\n              commandCallbacksRef.current[command]?.();\n              onAfterCommand?.(command);\n            }\n          );\n        }\n      }\n    });\n\n    return () => {\n      commands.forEach((command: AllCommandList[number]) => {\n        const keys = keybindings[command];\n        // console.log('key unbind', keys, command);\n        if (keys) {\n          mousetrap.unbind(keys);\n        }\n      });\n    };\n  }, [keybindings, enabled, bindGlobal, commands, onBeforeCommand, onAfterCommand]);\n};\n\nexport {\n  useKeybindings,\n};\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useCallback,\n  createContext,\n  ReactNode,\n  CSSProperties,\n  ChangeEventHandler,\n  MouseEventHandler,\n} from 'react';\nimport ReactModal from 'react-modal';\n\nimport {\n  useQuickPickLogic,\n} from '../hooks/use-quick-pick-logic';\n\nimport type {\n  QuickPickItem,\n  HasName,\n} from '../hooks/use-quick-pick-logic';\n\nimport {\n  TextFilter,\n} from '../text-filters';\n\nimport {\n  Deferred,\n} from '../deferred';\n\nimport {\n  useKeybindings,\n} from '../hooks/use-keybindings';\nimport type {\n  Keys,\n} from '../keybindings';\n\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    height: '80%',\n    overflow: 'hidden',\n    padding: '3px',\n    boxSizing: 'border-box',\n  } as CSSProperties,\n};\n\nconst titleStyle: CSSProperties = {\n  margin: 0,\n  padding: '2px 8px',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\nconst inputStyle: CSSProperties = {\n  width: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  // padding: 0,\n  fontSize: '1.2em',\n  boxSizing: 'border-box',\n  border: 'solid 2px orange',\n  color: '#333',\n};\n\nconst listStyle: CSSProperties = {\n  width: '100%',\n  listStyleType: 'none',\n  margin: 0,\n  padding: 0,\n  color: '#333',\n};\n\nconst listItemStyle: CSSProperties = {\n  width: '100%',\n  padding: 0,\n  margin: 0,\n  borderBottom: '1px solid #aaa',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\ninterface QuickPickPresentationalProps<Content extends HasName> {\n  title: string;\n  placeHolder: string;\n  isOpen: boolean;\n  selectedIndex: number;\n  items: QuickPickItem<Content>[];\n  onClose: () => unknown;\n  onTextChange: ChangeEventHandler<HTMLInputElement>;\n  onMouseDownOutside: MouseEventHandler<HTMLDivElement>;\n  renderItem: (\n    item: QuickPickItem<Content>,\n    isSelected: boolean,\n  ) => ReactNode;\n  parentSelector?: () => HTMLElement;\n}\n\nconst _QuickPickPresentational = <Item extends HasName>({\n  title,\n  placeHolder,\n  isOpen,\n  items,\n  selectedIndex,\n  onClose,\n  onTextChange,\n  onMouseDownOutside,\n  renderItem,\n  parentSelector,\n}: QuickPickPresentationalProps<Item>) => {\n  return (\n    <div onMouseDown={onMouseDownOutside} >\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={modalStyles}\n        contentLabel=\"Command Palette\"\n        parentSelector={parentSelector}\n      >\n        {\n          title &&\n          <div style={titleStyle}>{ title }</div>\n        }\n        <input\n          autoFocus\n          onChange={onTextChange}\n          type='text'\n          placeholder={placeHolder}\n          style={inputStyle}\n        ></input>\n        <ul style={listStyle}>\n          {\n            items\n              .map((item, idx) => (\n                <li\n                  key={`${item.name}`}\n                  style={listItemStyle}\n                >\n                  {renderItem(item, idx === selectedIndex)}\n                </li>\n              ))\n          }\n        </ul>\n      </ReactModal>\n    </div>\n  );\n};\n\n// TODO\nconst QuickPickPresentational = React.memo(_QuickPickPresentational) as any;\n// const QuickPickPresentational = (_QuickPickPresentational);\n\ninterface QuickPickOptions {\n  placeHolder?: string;\n  title?: string;\n}\n\ninterface QuickPickGlobals<Item extends HasName> {\n  isOpen: boolean;\n  showQuickPick: (items: Item[], options?: QuickPickOptions) => Promise<Item | null>;\n  cancelQuickPick: () => void;\n  selectItemQuickPick: () => void;\n  nextItemQuickPick: () => void;\n  previousItemQuickPick: () => void;\n}\n\nconst QUICK_PICK_COMMANDS = [\n  'cancelQuickPick',\n  'selectItemQuickPick',\n  'nextItemQuickPick',\n  'previousItemQuickPick',\n] as const;\n\ntype QuickPickAllCommandList = typeof QUICK_PICK_COMMANDS;\ntype QuickPickCommand = QuickPickAllCommandList[number];\n\nconst quickPickKeybindings: Record<QuickPickCommand, Keys> = {\n  cancelQuickPick: 'esc',\n  selectItemQuickPick: 'enter',\n  nextItemQuickPick: 'down',\n  previousItemQuickPick: 'up',\n};\n\ntype QuickPickCallbacks = Record<QuickPickCommand, () => unknown>;\n\nconst createQuickPickContext = <Item extends HasName>({\n  renderItem,\n  textFilter,\n}: {\n  renderItem: (item: QuickPickItem<Item>, isSelected: boolean) => ReactNode,\n  textFilter: TextFilter,\n}) => {\n  const QuickPickContext = createContext<QuickPickGlobals<Item>>({\n    isOpen: false,\n    showQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    cancelQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    selectItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    nextItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    previousItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n  });\n\n  const QuickPickProvider = ({\n    parentSelector,\n    modalAppElement = '#root',\n    children\n  }: {\n    parentSelector?: () => HTMLElement;\n    modalAppElement?: string | HTMLElement;\n    children: ReactNode;\n  }) => {\n    ReactModal.setAppElement(modalAppElement);\n    const deferredRef = useRef<Deferred<Item | null> | null>(null);\n    const [items, setItems] = useState<Item[]>([]);\n    const [placeHolder, setPlaceHolder] = useState('');\n    const [title, setTitle] = useState('');\n\n    const {\n      isOpen,\n      open,\n      close,\n      // toggle,\n      nextItem,\n      previousItem,\n      select,\n      chanegeInputText,\n      matchedItems,\n      selectedIndex,\n    } = useQuickPickLogic<Item>({items, textFilter});\n\n    const onTextChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n      chanegeInputText(event.target.value);\n    }, [chanegeInputText]);\n\n    const showQuickPick = useCallback((items: Item[], options?: QuickPickOptions): Promise<Item | null> => {\n      const {\n        placeHolder = '',\n        title = '',\n      } = options || {};\n\n      setPlaceHolder(placeHolder);\n      setTitle(title);\n\n      setItems(items);\n      const deferred = new Deferred<Item | null>();\n      deferredRef.current = deferred;\n      open();\n      return deferred.promise;\n    }, [open]);\n\n    const cancelQuickPick = useCallback(() => {\n      close();\n      deferredRef.current?.resolve(null);\n    }, [close]);\n\n    const selectItemQuickPick = useCallback(() => {\n      console.log('selectItemQuickPick')\n      const item = select();\n      deferredRef.current?.resolve(item);\n    }, [select]);\n\n    const callbacks: QuickPickCallbacks = useMemo(() => { \n      console.log('updated callbacks');\n      return {\n        cancelQuickPick,\n        selectItemQuickPick,\n        nextItemQuickPick: nextItem,\n        previousItemQuickPick: previousItem,\n      }; \n    }, [cancelQuickPick,\n      selectItemQuickPick,\n      nextItem,\n    previousItem]);\n\n    // keybindings\n    useKeybindings({\n      keybindings: quickPickKeybindings,\n      commandCallbacks: callbacks,\n      commands: QUICK_PICK_COMMANDS,\n      bindGlobal: true,\n      enabled: isOpen,\n    });\n\n    const quickPickGlobals: QuickPickGlobals<Item> = {\n      isOpen,\n      showQuickPick,\n      ...callbacks,\n    };\n\n    return (\n      <QuickPickContext.Provider\n        value={quickPickGlobals}\n      >\n        {\n          isOpen &&\n          <QuickPickPresentational\n            title={title}\n            placeHolder={placeHolder}\n            isOpen={isOpen}\n            items={matchedItems}\n            selectedIndex={selectedIndex}\n            onClose={cancelQuickPick}\n            onTextChange={onTextChange}\n            onMouseDownOutside={cancelQuickPick}\n            renderItem={renderItem}\n            parentSelector={parentSelector}\n          />\n        }\n        {children}\n      </QuickPickContext.Provider>\n    );\n  };\n\n  return {\n    QuickPickContext,\n    QuickPickProvider,\n  };\n};\n\nexport {\n  createQuickPickContext,\n};\n\nexport type {\n  QuickPickGlobals,\n};\n","import {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  useFlag,\n} from './use-flag';\n\nimport type {\n  TextFilter,\n} from '../text-filters';\n\ninterface QuickPickItem<Content> {\n  name: string;\n  matchedIndexes: number[];\n  content: Content;\n}\n\ninterface HasName {\n  name: string;\n}\n\nconst useQuickPickLogic = <Item extends HasName>({\n  items,\n  textFilter,\n}: {\n  items: Item[],\n  textFilter: TextFilter,\n}) => {\n  const [inputText, setInputText] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [isOpen, {on: isOpenOn, off: isOpenOff}] = useFlag(false);\n  const [matchedItems, setMatchedItems] = useState<QuickPickItem<Item>[]>([]);\n\n  const open = useCallback(() => {\n    setInputText('');\n    setSelectedIndex(0);\n    isOpenOn();\n  }, [isOpenOn]);\n\n  const close = useCallback(() => {\n    setInputText('');\n    setSelectedIndex(0);\n    isOpenOff();\n  }, [isOpenOff]);\n\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      close();\n    } else {\n      open();\n    }\n  }, [isOpen, open, close]);\n\n  const select = useCallback<() => Item | null>(() => {\n    const selectedItem = matchedItems[selectedIndex]?.content ?? null;\n    close();\n    return selectedItem;\n  }, [selectedIndex, matchedItems, close]);\n\n  const chanegeInputText = useCallback((newInputText: string) => {\n    setInputText(newInputText);\n    setSelectedIndex(0);\n  }, []);\n\n  const nextItem = useCallback(() => {\n    setSelectedIndex((prev) => Math.min(prev + 1, matchedItems.length - 1));\n  }, [matchedItems]);\n\n  const previousItem = useCallback(() => {\n    setSelectedIndex((prev) => Math.max(0, prev - 1));\n  }, []);\n\n  useEffect(() => {\n    const newMatchedItems: QuickPickItem<Item>[] = [];\n    items.forEach((item) => {\n      const matchedIndexes = textFilter(inputText, item.name);\n      if (matchedIndexes !== null) {\n        newMatchedItems.push({\n          name: item.name,\n          matchedIndexes,\n          content: item,\n        });\n      }\n    });\n    setMatchedItems(newMatchedItems);\n  }, [inputText, isOpen, items, textFilter]);\n\n  return {\n    isOpen,\n    open,\n    close,\n    toggle,\n    nextItem,\n    previousItem,\n    select,\n    chanegeInputText,\n    matchedItems,\n    selectedIndex,\n  };\n}\n\nexport {\n  useQuickPickLogic,\n};\n\nexport type {\n  QuickPickItem,\n  HasName,\n};\n\n","type TextFilterKind = 'fuzzyFilter' | 'substringFilter' | 'regexFilter'\ntype TextFilter = (pattern: string, target: string) => number[] | null;\n\nconst substringFilter: TextFilter = (pattern, target) => {\n  const index = target.indexOf(pattern);\n  if(index >= 0) {\n    return Array(pattern.length).fill(0).map((_, i) => i + index);\n  } else {\n    return null\n  }\n};\n\nconst regexFilter: TextFilter = (pattern, target) => {\n  try {\n    const result = target.match(pattern);\n    if(result) {\n      const foundedStr = result[0];\n      const index = result.index;\n      if (index === undefined) {\n        return null;\n      }\n      return Array(foundedStr.length).fill(0).map((_, i) => i + index);\n    } else {\n      return null\n    }\n  } catch(err) {\n    // regex syntax error\n    return null;\n  }\n};\n\nconst fuzzyFilter: TextFilter = (pattern, target) => {\n  const indexes = [];\n  let index = 0;\n  for (const c of pattern) {\n    index = target.indexOf(c, index);\n    if (index < 0) return null;\n    indexes.push(index);\n    index++;\n  }\n  return indexes;\n};\n\nconst textFilterMap: Record<TextFilterKind, TextFilter> = {\n  substringFilter,\n  regexFilter,\n  fuzzyFilter,\n};\n\nconst createTextFilter = (\n  textFilterKind: TextFilterKind,\n  options?: {\n    ignoreCase?: boolean,\n  }\n): TextFilter => {\n  const {\n    ignoreCase = false,\n  } = options ?? {};\n\n  const textFilter = (pattern: string, target: string) => {\n    if (ignoreCase) {\n      pattern = pattern.toLowerCase();\n      target = target.toLowerCase();\n    };\n    return textFilterMap[textFilterKind](pattern, target);\n  };\n\n  return textFilter;\n};\n\nexport {\n  substringFilter,\n  regexFilter,\n  fuzzyFilter,\n  createTextFilter,\n};\n\nexport type {\n  TextFilterKind,\n  TextFilter,\n};\n","import {\n  CSSProperties,\n} from 'react';\nimport {\n  Keyboard,\n} from './Keyboard';\n\nimport {\n  MatchedText,\n} from './MatchedText';\n\nimport {\n  createQuickPickContext,\n} from './QuickPick';\n\nimport {\n  Keys,\n} from '../keybindings';\n\nimport {\n  createTextFilter,\n} from '../text-filters'\n\nimport type {\n  Command,\n} from '../commands';\n\ninterface CommandPaletteItem {\n  name: string;\n  command: Command;\n  keys: Keys;\n}\n\nconst itemStyle: CSSProperties = {\n  backgroundColor: 'white',\n  width: '100%',\n  height: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  boxSizing: 'border-box',\n};\n\nconst itemStyleSelected: CSSProperties = {\n  ...itemStyle,\n  backgroundColor: '#ddd',\n};\n\nconst renderItem = (\n  {name, matchedIndexes, content}: any,\n  isSelected: boolean,\n) => {\n  return (\n    <div\n      style={isSelected ? itemStyleSelected : itemStyle}\n    >\n      <MatchedText text={name} matchedIndexes={matchedIndexes} />\n      <Keyboard keys={content.keys} />\n    </div>\n  );\n};\n\nconst {\n  QuickPickContext: CommandPaletteContext,\n  QuickPickProvider: CommandPaletteProvider,\n} = createQuickPickContext<CommandPaletteItem>({\n  renderItem,\n  textFilter: createTextFilter('fuzzyFilter', {ignoreCase: true}),\n});\n\nexport {\n  CommandPaletteContext,\n  CommandPaletteProvider,\n};\n","import {\n  CSSProperties,\n} from 'react';\n\nimport {\n  MatchedText,\n} from './MatchedText';\n\nimport {\n  createQuickPickContext,\n} from './QuickPick';\n\nimport {\n  createTextFilter,\n} from '../text-filters'\n\nimport type {\n  OutlineNode\n} from '../pdf';\n\ninterface OutlineNodeItem {\n  name: string;\n  content: OutlineNode;\n}\n\nconst itemStyle: CSSProperties = {\n  backgroundColor: 'white',\n  width: '100%',\n  height: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  boxSizing: 'border-box',\n};\n\nconst itemStyleSelected: CSSProperties = {\n  ...itemStyle,\n  backgroundColor: '#ddd',\n};\n\nconst renderItem = (\n  {name, matchedIndexes}: {name: string; matchedIndexes: number[]},\n  isSelected: boolean,\n) => {\n  return (\n    <div\n      style={isSelected ? itemStyleSelected : itemStyle}\n    >\n      <MatchedText text={name} matchedIndexes={matchedIndexes} />\n    </div>\n  );\n};\n\nconst {\n  QuickPickContext: OutlineSelectorContext,\n  QuickPickProvider: OutlineSelectorProvider,\n} = createQuickPickContext<OutlineNodeItem>({\n  renderItem,\n  textFilter: createTextFilter('fuzzyFilter', {ignoreCase: true}),\n});\n\nexport {\n  OutlineSelectorContext,\n  OutlineSelectorProvider,\n};\n\nexport type {\n  OutlineNodeItem,\n};\n","import {\n  useState,\n  useCallback,\n  useRef,\n  createContext,\n  ReactNode,\n  CSSProperties,\n  ChangeEventHandler,\n  MouseEventHandler,\n} from 'react';\nimport ReactModal from 'react-modal';\n\nimport {\n  useFlag\n} from '../hooks/use-flag';\n\nimport {\n  Deferred,\n} from '../deferred';\n\nimport {\n  useKeybindings,\n} from '../hooks/use-keybindings';\nimport type {\n  Keys,\n} from '../keybindings';\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    height: '20%',\n    overflow: 'hidden',\n    padding: '3px',\n    boxSizing: 'border-box',\n  } as CSSProperties,\n};\n\nconst promptStyle: CSSProperties = {\n  margin: 0,\n  padding: '2px 8px',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\nconst inputStyle: CSSProperties = {\n  width: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  // padding: 0,\n  fontSize: '1.2em',\n  boxSizing: 'border-box',\n  border: 'solid 2px orange',\n  color: '#333',\n};\n\ninterface InputBoxPresentationalProps {\n  prompt: string;\n  placeHolder: string;\n  isOpen: boolean;\n  onClose: () => unknown;\n  onTextChange: ChangeEventHandler<HTMLInputElement>;\n  onMouseDownOutside: MouseEventHandler<HTMLDivElement>;\n  parentSelector?: () => HTMLElement;\n}\n\nconst InputBoxPresentational = ({\n  prompt,\n  placeHolder,\n  isOpen,\n  onClose,\n  onTextChange,\n  onMouseDownOutside,\n  parentSelector,\n}: InputBoxPresentationalProps) => {\n  return (\n    <div onMouseDown={onMouseDownOutside} >\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={modalStyles}\n        contentLabel=\"Input Box\"\n        parentSelector={parentSelector}\n      >\n        <input\n          autoFocus\n          onChange={onTextChange}\n          type='text'\n          placeholder={placeHolder}\n          style={inputStyle}\n        ></input>\n        {\n          prompt &&\n          <div style={promptStyle}>{ prompt }</div>\n        }\n      </ReactModal>\n    </div>\n  );\n};\n\ninterface InputBoxOptions {\n  // title?: string;\n  prompt?: string;\n  placeHolder?: string;\n}\n\ninterface InputBoxGlobals {\n  isOpen: boolean;\n  showInputBox: (options?: InputBoxOptions) => Promise<string | null>;\n  cancelInputBox: () => void;\n  confirmInputBox: () => void;\n}\n\nconst INPUT_BOX_COMMANDS = [\n  'cancelInputBox',\n  'confirmInputBox',\n] as const;\n\ntype InputBoxAllCommandList = typeof INPUT_BOX_COMMANDS;\ntype InputBoxCommand = InputBoxAllCommandList[number];\n\nconst inputBoxKeybindings: Record<InputBoxCommand, Keys> = {\n  cancelInputBox: 'esc',\n  confirmInputBox: 'enter',\n};\n\nconst createInputBoxContext = () => {\n  const InputBoxContext = createContext<InputBoxGlobals>({\n    isOpen: false,\n    showInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n    cancelInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n    confirmInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n  });\n\n  const InputBoxProvider = ({\n    parentSelector,\n    modalAppElement = '#root',\n    children,\n  }: {\n    parentSelector?: () => HTMLElement;\n    modalAppElement?: string | HTMLElement;\n    children: ReactNode;\n  }) => {\n    ReactModal.setAppElement(modalAppElement);\n\n    const deferredRef = useRef<Deferred<string | null> | null>(null);\n    const [placeHolder, setPlaceHolder] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [inputText, setInputText] = useState('');\n\n    const [\n      isOpen,\n      {\n        on: isOpenOn,\n        off: isOpenOff,\n      }\n    ] = useFlag(false);\n\n    const open = useCallback(() => {\n      isOpenOn();\n      setInputText('');\n    }, [isOpenOn]);\n\n    const close = useCallback(() => {\n      isOpenOff();\n    }, [isOpenOff]);\n\n    const onTextChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n      setInputText(event.target.value);\n    }, []);\n\n    const showInputBox = (options?: InputBoxOptions): Promise<string | null> => {\n      const {\n        placeHolder = '',\n        prompt = '',\n      } = options || {};\n\n      setPlaceHolder(placeHolder);\n      setPrompt(prompt);\n\n      const deferred = new Deferred<string | null>();\n      deferredRef.current = deferred;\n      open();\n      return deferred.promise;\n    };\n\n    const cancelInputBox = () => {\n      close();\n      deferredRef.current?.resolve(null);\n    };\n\n    const confirmInputBox = () => {\n      close();\n      deferredRef.current?.resolve(inputText);\n    };\n\n    const callbacks = {\n      cancelInputBox,\n      confirmInputBox,\n    };\n\n    useKeybindings({\n      keybindings: inputBoxKeybindings,\n      commandCallbacks: callbacks,\n      commands: INPUT_BOX_COMMANDS,\n      bindGlobal: true,\n      enabled: isOpen,\n    });\n\n    const inputBoxGlobals: InputBoxGlobals = {\n      isOpen,\n      showInputBox,\n      cancelInputBox,\n      confirmInputBox,\n    };\n\n    return (\n      <InputBoxContext.Provider\n        value={inputBoxGlobals}\n      >\n        {\n          isOpen &&\n          <InputBoxPresentational\n            prompt={prompt}\n            placeHolder={placeHolder}\n            isOpen={isOpen}\n            onClose={cancelInputBox}\n            onTextChange={onTextChange}\n            onMouseDownOutside={cancelInputBox}\n            parentSelector={parentSelector}\n          />\n        }\n        {children}\n      </InputBoxContext.Provider>\n    );\n  };\n\n  return {\n    InputBoxContext,\n    InputBoxProvider,\n  };\n};\n\n\nconst {\n  InputBoxContext,\n  InputBoxProvider,\n} = createInputBoxContext();\n\nexport {\n  InputBoxContext,\n  InputBoxProvider,\n};\n\nexport type {\n  InputBoxGlobals,\n};\n","import * as React from 'react'\nimport {useDropzone, DropzoneRef} from 'react-dropzone'\n\ninterface IDropFileArea {\n  onDropFile(file: File): void;\n  children: any;\n  accept?: string | string[];\n  dropzoneRef?: React.MutableRefObject<DropzoneRef | null>,\n}\n\nconst fileDropAreaStyle: React.CSSProperties = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n};\n\nconst DropFileArea: React.FC<IDropFileArea> = ({\n  onDropFile,\n  children,\n  accept,\n  dropzoneRef,\n}) => {\n  const onDrop = (acceptedFiles: File[]) => {\n    onDropFile(acceptedFiles[0]);\n  };\n  const {getRootProps, getInputProps, open} = useDropzone({\n    noKeyboard: true,\n    noClick: true,\n    maxFiles: 1,\n    onDrop,\n    accept,\n  })\n\n  if (dropzoneRef) {\n    dropzoneRef.current = {open};\n  }\n\n  return (\n    <div {...getRootProps({\n        onClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => event.stopPropagation(),\n      })}\n      style={fileDropAreaStyle}\n    >\n      <input {...getInputProps()} />\n      { children }\n    </div>\n  )\n}\n\nexport {\n  DropFileArea\n};\n","const FULL_SCREEN_COMMANDS = [\n  'fullScreenOn',\n  'fullScreenOff',\n  'fullScreenToggle',\n] as const;\n\nconst SHOW_INFO_COMMANDS = [\n  'showInfoOn',\n  'showInfoOff',\n  'showInfoToggle',\n] as const;\n\nconst PAGE_COMMANDS = [\n  'prevPage',\n  'nextPage',\n  'firstPage',\n  'lastPage',\n  'goToPage',\n] as const;\n\nconst ZOOM_COMMANDS = [\n  'zoomReset',\n  'zoomIn',\n  'zoomOut',\n  'zoomFitWidth',\n  'zoomFitHeight',\n] as const;\n\nconst SCROLL_COMMANDS = [\n  'scrollLeft',\n  'scrollRight',\n  'scrollUp',\n  'scrollDown',\n  'scrollHalfPageDown',\n  'scrollHalfPageUp',\n  'scrollTop',\n  'scrollBottom',\n  'scrollReset',\n] as const;\n\nconst ROTATE_COMMANDS = [\n  'rotateRight',\n  'rotateLeft',\n] as const;\n\nconst COLOR_COMMANDS = [\n  'colorInvert',\n  'invertColorRateUp',\n  'invertColorRateDown',\n] as const;\n\nconst OUTLINE_COMMANDS = [\n  'goToOutline',\n  'goToOutlineRecursive',\n] as const;\n\nconst SEARCH_COMMANDS = [\n  'search',\n  'searchNext',\n  'searchPrev',\n  'pickSearchList',\n  'highlightToggle',\n] as const;\n\nconst HISTORY_COMMANDS = [\n  'forwardPageHistory',\n  'backwardPageHistory',\n] as const;\n\nconst COMMANDS = [\n  'doNothing',\n\n  ...FULL_SCREEN_COMMANDS,\n  ...SHOW_INFO_COMMANDS,\n  ...PAGE_COMMANDS,\n  ...ZOOM_COMMANDS,\n  ...SCROLL_COMMANDS,\n  ...ROTATE_COMMANDS,\n  ...COLOR_COMMANDS,\n\n  'sidebarToggle',\n\n  ...OUTLINE_COMMANDS,\n  ...SEARCH_COMMANDS,\n  ...HISTORY_COMMANDS,\n\n  'commandPaletteOpen',\n  'fileOpen',\n] as const;\n\ntype AllCommandList = typeof COMMANDS;\n\ntype Command = AllCommandList[number];\n\ntype FullScreenCommand = typeof FULL_SCREEN_COMMANDS[number];\ntype ShowInfoCommand = typeof SHOW_INFO_COMMANDS[number];\ntype PageCommand = typeof PAGE_COMMANDS[number];\ntype ZoomCommand = typeof ZOOM_COMMANDS[number];\ntype ScrollCommand = typeof SCROLL_COMMANDS[number];\ntype RotateCommand = typeof ROTATE_COMMANDS[number];\ntype ColorCommand = typeof COLOR_COMMANDS[number];\ntype OutlineCommand = typeof OUTLINE_COMMANDS[number];\ntype SearchCommand = typeof SEARCH_COMMANDS[number];\ntype HistoryCommand = typeof HISTORY_COMMANDS[number];\n\nconst isCommand = (obj: any): obj is Command => {\n  return (\n    typeof obj === 'string'\n    && (COMMANDS as readonly string[]).includes(obj)\n  );\n};\n\n// interface CommandCallbackObjType {\n//   keyup: () => unknown;\n//   keydown: () => unknown;\n//   keypress: () => unknown;\n// };\n\ntype CommandCallback = (\n  (() => unknown)\n);\n\n// type CommandCallbacks = Partial<Record<Command, () => unknown>>;\ntype CommandCallbacks = Record<Command, CommandCallback>;\n\nconst commandToTitle = (command: Command): string => {\n  // example: 'fullScreenOn' -> 'Full Screen On'\n  return command\n    .replace(/^(\\w)/, (v) => v.toUpperCase())\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/([a-zA-Z])(\\d)/g, '$1 $2')\n    .replace(/(\\d)([a-zA-Z])/g, '$1 $2');\n};\n\nexport {\n  COMMANDS,\n  commandToTitle,\n  isCommand,\n  FULL_SCREEN_COMMANDS,\n  SHOW_INFO_COMMANDS,\n  PAGE_COMMANDS,\n  ZOOM_COMMANDS,\n  SCROLL_COMMANDS,\n  ROTATE_COMMANDS,\n  COLOR_COMMANDS,\n  OUTLINE_COMMANDS,\n  SEARCH_COMMANDS,\n  HISTORY_COMMANDS,\n};\n\nexport type {\n  AllCommandList,\n  Command,\n  CommandCallback,\n  CommandCallbacks,\n  FullScreenCommand,\n  ShowInfoCommand,\n  PageCommand,\n  ZoomCommand,\n  ScrollCommand,\n  RotateCommand,\n  ColorCommand,\n  OutlineCommand,\n  SearchCommand,\n  HistoryCommand,\n};\n","import {CSSProperties, FC} from 'react';\nimport {Keyboard} from './Keyboard';\n\nimport {\n  COMMANDS,\n  commandToTitle,\n} from '../commands';\nimport type {\n  Keybindings\n} from '../keybindings';\n\nconst landingPageStyle: CSSProperties = {\n  padding: '0px 40px',\n  background: 'white',\n  width: '100%',\n  height: '100%',\n  overflow: 'scroll',\n};\n\nconst tableStyle: CSSProperties = {\n  borderCollapse: 'collapse',\n  // border: '#ddd',\n};\n\nconst theadStyle: CSSProperties = {\n  backgroundColor: '#777',\n  color: '#eee',\n  border: '1px solid #ddd',\n  padding: '4px',\n};\n\nconst thStyle: CSSProperties = {\n  padding: '4px',\n};\n\nconst trStyle: CSSProperties = {\n  padding: '4px',\n};\n\nconst tdStyle: CSSProperties = {\n  padding: '4px',\n};\n\ninterface LandingPageProps {\n  keybindings: Keybindings;\n}\n\nconst LandingPage: FC<LandingPageProps> = ({\n  keybindings,\n}) => (\n  <div\n    style={landingPageStyle}\n  >\n    <h3>How to Use</h3>\n    <ul>\n      <li>command palette: <Keyboard keys={keybindings.commandPaletteOpen} /></li>\n      <li>open file:\n        <ul>\n          <li>drag and drop PDF file here.</li>\n          <li>keyboard shortcuts: <Keyboard keys={keybindings.fileOpen} /></li>\n          <li>choose 'File Open' command in command palette</li>\n        </ul>\n      </li>\n    </ul>\n\n    <h3>Keybindings</h3>\n    <table style={tableStyle} >\n      <thead style={theadStyle} >\n        <tr>\n          <th style={thStyle} >command</th>\n          <th style={thStyle} >keybord shortcuts</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          COMMANDS.map((command, idx) => (\n            <tr\n              key={command}\n              style={{\n                ...trStyle,\n                backgroundColor: idx % 2 === 0 ? '#eee' : '#fff',\n              }} \n            >\n              <td style={tdStyle} >{commandToTitle(command)}</td>\n              <td style={tdStyle} ><Keyboard keys={keybindings[command]} /></td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  </div>\n);\n\nexport {\n  LandingPage,\n}\n","import {CSSProperties, memo} from 'react';\n\nimport {\n  Outline,\n} from 'react-pdf';\n\nimport {\n  OutlineNode,\n} from '../pdf';\n\nconst MemorizedOutline = memo(Outline);\n\ninterface SideBarProps {\n  onItemClick: ({pageNumber}: {pageNumber: string}) => void;\n  onLoadSuccess: (outline: OutlineNode[]) => void;\n  isOpen: boolean;\n}\n\nconst SideBarStyle: CSSProperties = {\n  position: 'fixed',\n  zIndex: 999,\n};\n\nconst SideBar = ({\n  onItemClick,\n  onLoadSuccess,\n  isOpen,\n}: SideBarProps) => {\n  return (\n    <div\n      style={{\n        ...SideBarStyle,\n        display: isOpen ? 'block' : 'none',\n      }}\n    >\n      <MemorizedOutline\n        onItemClick={onItemClick}\n        onLoadSuccess={onLoadSuccess}\n      />\n    </div>\n  );\n};\n\nexport {\n  SideBar,\n};\n","import {CSSProperties, memo, useCallback} from 'react';\nimport {Page} from 'react-pdf';\n\nconst MemorizedPage = memo(Page);\n\ninterface PageRendererDataType {\n  scale: number;\n  rotate: number;\n  isKeywordHighlighted: boolean;\n  keyword: string;\n  paddingSize: number;\n  isScrolling: boolean;\n  pageWidth: number;\n}\n\ninterface PageRendererProps {\n  index: number;\n  style: CSSProperties;\n  data: PageRendererDataType;\n}\n\nconst highlightPattern = (text: string, pattern: any) => {\n  const splitText = text.split(pattern);\n\n  if (splitText.length <= 1) {\n    return text;\n  }\n\n  const matches = text.match(pattern);\n\n  return (\n    splitText.reduce((arr: string[], element: any, index: number) => (matches && matches[index] ? [\n      ...arr,\n      element,\n      <span\n        key={index}\n        style={{\n          background: 'rgba(255, 0, 0, 0.3)',\n        }}\n      >\n        {matches[index]}\n      </span>,\n    ] : [...arr, element]), [])\n  );\n};\n\nconst PageRenderer = ({index, style, data}: any) => {\n  const {\n    scale,\n    rotate,\n    isKeywordHighlighted,\n    keyword,\n    paddingSize,\n    isScrolling,\n    pageWidth,\n  } = data;\n\n  const textRenderer = useCallback(({str}: any) => {\n    return <>{highlightPattern(str, keyword)}</>;\n  }, [keyword]);\n\n  console.log(style);\n  return (\n    <div style={{\n      ...style,\n      top: `${parseFloat(style.top) + paddingSize}px`,\n    }}\n    >\n      <div\n        style={{\n          width: `${pageWidth}px`,\n          margin: 'auto',\n        }}\n      >\n        <MemorizedPage\n          pageNumber={index + 1}\n          scale={scale}\n          rotate={rotate}\n          customTextRenderer={isKeywordHighlighted ? textRenderer : undefined}\n          onLoadError={useCallback((error) => console.error('Error while loading page! ' + error.message), [])}\n          onRenderError={useCallback((error) => console.error('Error while loading page! ' + error.message), [])}\n          onGetTextError={useCallback((error) => console.error('Error while loading text layer items! ' + error.message), [])}\n          renderTextLayer={!isScrolling}\n          renderAnnotationLayer={false}\n          renderInteractiveForms={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport {\n  PageRenderer,\n};\n\nexport type {\n  PageRendererProps,\n  PageRendererDataType,\n};\n","import {\n  COMMANDS,\n} from './commands';\n\nimport type {\n  Command,\n} from './commands';\n\nimport {\n  Validator,\n} from 'jsonschema';\n\ntype Keys = string | string[] | null;\n// type Keybindings = Partial<Record<Command, Keys>>;\ntype Keybindings = Record<Command, Keys>;\n\nconst createKeybindingsJsonSchema = () => {\n  const keysJsonSchema = {\n    \"anyOf\": [\n      {\n        \"type\": \"null\"\n      },\n      {\n        \"type\": \"string\"\n      },\n      {\n        \"type\": \"array\",\n        \"items\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n    ],\n  };\n  const base: any = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"additionalProperties\": false,\n    \"properties\": {\n    },\n    \"required\": [\n    ],\n  };\n  COMMANDS.forEach((command: Command) => {\n    base.properties[command] = keysJsonSchema;\n    // partial keybindings is OK for now.\n    // base.required.push(command);\n  });\n  return base;\n};\n\nconst keybindingsJsonSchema = createKeybindingsJsonSchema();\nconst keybindingsJsonSchemaValidator = new Validator();\n\n// const isKeys = (obj: any): obj is Keys => {\n//   return (\n//     (obj === null)\n//     || (typeof obj === 'string')\n//     || (\n//       (typeof obj === 'object') \n//       && (obj instanceof Array)\n//       && obj.every((s) => (typeof s === 'string'))\n//     )\n//   );\n// };\n\n// const isKeybindings = (obj: any): obj is Keybindings => {\n//   return (\n//     (typeof obj === 'object')\n//     && (obj !== null)\n//     && COMMANDS.every((command) => isKeys(obj[command]))\n//   );\n// };\n\nconst isPartialKeybindings = (obj: any): obj is Partial<Keybindings> => {\n  const result = keybindingsJsonSchemaValidator.validate(obj, keybindingsJsonSchema);\n  if (result.valid) {\n    return true;\n  } else {\n    throw result.errors;\n  }\n\n  // return (\n  //   (typeof obj === 'object')\n  //   && (obj !== null)\n  //   && Object.keys(obj).every((key) => isCommand(key) && isKeys(obj[key]))\n  // );\n};\n\nconst defaultKeybindings: Keybindings = {\n  doNothing: null,\n\n  fullScreenOn: null,\n  fullScreenOff: null,\n  fullScreenToggle: 'f',\n\n  showInfoOn: null,\n  showInfoOff: null,\n  showInfoToggle: 's',\n\n  prevPage: [/*'p',*/ 'shift+space', 'pageup',],\n  nextPage: [/*'n',*/ 'space', 'pagedown'],\n  firstPage: ['g', 'ctrl+home'],\n  lastPage: ['G', 'ctrl+end'],\n  goToPage: ['ctrl+g', 'command+g'],\n\n  zoomReset: '=',\n  zoomIn: '+',\n  zoomOut: '-',\n\n  zoomFitWidth: 'w',\n  zoomFitHeight: 'e',\n\n  scrollLeft: 'h',\n  scrollRight: 'l',\n  scrollUp: 'k',\n  scrollDown: 'j',\n  scrollHalfPageDown: 'd',\n  scrollHalfPageUp: 'u',\n\n  scrollTop: ['home', 'z t'],\n  scrollBottom: ['end', 'z b'],\n  scrollReset: 'M',\n\n  rotateRight: '>',\n  rotateLeft: '<',\n\n  colorInvert: 'i',\n  invertColorRateUp: ')',\n  invertColorRateDown: '(',\n\n  highlightToggle: '#',\n  sidebarToggle: 'b',\n\n  goToOutline: 'o',\n  goToOutlineRecursive: 'O',\n\n  search: '/',\n  searchNext: 'n',\n  searchPrev: 'N',\n\n  pickSearchList: null,\n  forwardPageHistory: 'L',\n  backwardPageHistory: 'H',\n\n  commandPaletteOpen: [':', 'command+shift+p', 'ctrl+shift+p'],\n  fileOpen: ['command+o', 'ctrl+o'],\n};\n\nexport {\n  defaultKeybindings,\n  isPartialKeybindings,\n};\n\nexport type {\n  Keys,\n  Keybindings,\n}\n","const animationHandlers: Handler[] = [];\n\ninterface Handler {\n  id?: number;\n}\n\nconst repeatFunc = (func: () => void): Handler => {\n  let handler: Handler = {};\n  const loop = () => {\n    func();\n    // reserve next frame process\n    handler.id = requestAnimationFrame(loop);\n  }\n  // first call\n  handler.id = requestAnimationFrame(loop);\n  return handler;\n};\n\nconst cancelRepeatFunc = (handler: Handler) => {\n  if(handler.id !== undefined) {\n    cancelAnimationFrame(handler.id);\n  }\n};\n\nconst startScroll = (container: HTMLElement, scrollOptions: any): void => {\n  if(animationHandlers.length > 0)return;\n  //stopScroll();\n  const handler = repeatFunc(() => {\n    container.scrollBy(scrollOptions);\n  });\n  animationHandlers.push(handler);\n};\n\nconst stopScroll = (): void => {\n  while(true) {\n    const handler = animationHandlers.pop();\n    if (!handler) break;\n    cancelRepeatFunc(handler);\n  }\n};\n\nexport {startScroll, stopScroll};\n","import {\n  FC,\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n} from 'react';\nimport {\n  Document,\n} from 'react-pdf';\n\nimport type {DropzoneRef} from 'react-dropzone';\n\nimport {\n  getPdfTexts,\n  outlineNodeToPageNumber,\n} from '../pdf';\nimport type {\n  PDFDocumentProxy,\n  OutlineNode,\n} from '../pdf';\n\nimport {FixedSizeList as List} from 'react-window';\n\nimport {CommandPaletteContext, } from './CommandPaletteContext';\nimport {OutlineSelectorContext, } from './OutlineSelectorContext';\nimport {InputBoxContext, } from './InputBoxContext';\n\nimport {DropFileArea} from './DropFileArea';\nimport {LandingPage} from './LandingPage';\n\nimport {SideBar} from './SideBar';\nimport {PageRenderer} from './PageRenderer';\nimport type {PageRendererDataType} from './PageRenderer';\n\nimport {defaultKeybindings} from '../keybindings';\nimport type {Keybindings} from '../keybindings';\n\nimport {useKeybindings} from '../hooks/use-keybindings';\nimport {useRepeatCommand} from '../hooks/use-repeat-command';\n\nimport {\n  startScroll,\n  stopScroll,\n} from '../scroll';\n\nimport {\n  CommandCallback,\n  CommandCallbacks,\n  COMMANDS,\n  commandToTitle,\n} from '../commands';\nimport type {\n  AllCommandList,\n  FullScreenCommand,\n} from '../commands';\n\nimport {isDev} from '../env';\n\ninterface KFPDFViewerProps {\n  fullScreenCommandCallbacks: Record<FullScreenCommand, CommandCallback>;\n  height: number;\n  width: number;\n  paddingSize?: number;\n  scrollStep?: number;\n  scrollHalfPageStep?: number;\n  scaleMax?: number;\n  scaleMin?: number;\n  scaleStep?: number;\n  invertColorRateStep?: number;\n};\n\nconst KFPDFViewer: FC<KFPDFViewerProps> = ({\n  fullScreenCommandCallbacks,\n  height,\n  width,\n  paddingSize = 5,\n  scrollStep = 25,\n  scrollHalfPageStep = 60,\n  scaleMax = 4,\n  scaleMin = 0.1,\n  scaleStep = 0.1,\n  invertColorRateStep = 0.05,\n}) => {\n\n  // state\n  const [pdf, setPdf] = useState<PDFDocumentProxy | null>(null);\n  const [outline, setOutline] = useState<OutlineNode[] | null>(null);\n\n  const [keybindings] = useState<Keybindings>(defaultKeybindings);\n  const [url, setUrl] = useState(isDev ? 'test.pdf' : '');\n  const [numPages, setNumPages] = useState(0);\n  const [rotate, setRotate] = useState(0);\n  const [scale, setScale] = useState(1);\n\n  const [pageWidthRaw, setPageWidthRaw] = useState(500);\n  const [pageHeightRaw, setPageHeightRaw] = useState(1000);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isColorInverted, setIsColorInverted] = useState(false);\n  const [invertColorRate, setInvertColorRate] = useState(1);\n  const [showInfo, setShowInfo] = useState(isDev);\n\n  const [isScrolling, setIsScrolling] = useState(false);\n  const [scrollOffset, setScrollOffset] = useState(0);\n\n  const [keyword, setKeyword] = useState('');\n  const [isKeywordHighlighted, setIsKeywordHighlighted] = useState(true);\n  const [pdfTexts, setPdfTexts] = useState<string[]>([]);\n  const [keywordHitPages, setKeywordHitPages] = useState<Set<number>>(new Set([]));\n\n  // ref\n  const listRef = useRef<List | null>(null);\n  // NOTE: use outer element of <List> for scrolling.\n  // call `Element.scrollBy` method for scrolling\n  const listOuterRef = useRef<HTMLDivElement | null>(null);\n\n  const startListOuterScroll = (offset: {top: number} | {left: number}) => {\n    if (listOuterRef.current) {\n      startScroll(listOuterRef.current, offset);\n      setIsScrolling(true);\n    }\n  };\n\n  const docRef = useRef<any | null>(null);\n  const commandCallbacksRef = useRef<CommandCallbacks | null>(null);\n  const dropzoneRef = useRef<DropzoneRef | null>(null);\n\n  // context\n  const commandPalette = useContext(CommandPaletteContext);\n  const outlineSelector = useContext(OutlineSelectorContext);\n  const inputBox = useContext(InputBoxContext);\n  const isModalOpen = [commandPalette, outlineSelector, inputBox].every((mdl) => mdl.isOpen);\n\n  // custom hooks\n\n  const [repeatCount, resetRepeatCount] = useRepeatCommand();\n  const repeatCount1 = Math.max(repeatCount, 1);\n\n  const pageHeight = ((rotate / 90) % 2 === 0) ? pageHeightRaw * scale : pageWidthRaw * scale;\n  const pageWidth = ((rotate / 90) % 2 === 0) ? pageWidthRaw * scale : pageHeightRaw * scale;\n  const itemSize = pageHeight + paddingSize;\n\n  const onDocumentLoadSuccess = (pdf: PDFDocumentProxy) => {\n    setPdf(pdf);\n    setNumPages(pdf.numPages);\n    (async () => {\n      // TODO: consider variable page size.\n      const page = await pdf.getPage(1);\n      const [x1, y1, x2, y2] = page.view;\n      setPageWidthRaw(x2 - x1);\n      setPageHeightRaw(y2 - y1);\n      setPdfTexts(await getPdfTexts(pdf));\n    })();\n  };\n\n  const goToOutline = async ({\n    outline, recursive,\n  }: {outline: OutlineNode[] | null, recursive: boolean}) => {\n    if (!pdf || !outline || isModalOpen) return;\n    const result = await outlineSelector.showQuickPick(\n      outline.map((outlineNode) => ({\n        name: outlineNode.title,\n        content: outlineNode\n      }))\n    );\n    if (!result) return;\n    if (recursive && result.content.items?.length) {\n      goToOutline({outline: result.content.items, recursive: true});\n    } else {\n      const targetPageNumber = await outlineNodeToPageNumber({\n        pdf, outlineNode: result.content\n      });\n      jumpPage(targetPageNumber);\n    }\n  };\n\n  const search = async () => {\n    if (!pdf || isModalOpen || pdfTexts.length === 0) return;\n    const newKeyword = await inputBox.showInputBox({\n      prompt: 'input word to search'\n    });\n    if (newKeyword) {\n      const hittedPages = pdfTexts\n        .map((text, idx) => text.includes(keyword) ? idx + 1 : -1)\n        .filter((i) => i > 0);\n\n      if (hittedPages.length > 0) {\n        setKeyword(keyword);\n        setKeywordHitPages(new Set(hittedPages));\n      } else {\n        alert(`can not find keyword: ${keyword}`);\n      }\n    }\n  };\n\n  const searchNext = async (direction: 'forward' | 'backward') => {\n    const step = {forward: 1, backward: -1}[direction];\n    let tmpPageNumber = currentPageNumber + step;\n    while (\n      1 <= tmpPageNumber && tmpPageNumber <= numPages\n      && !keywordHitPages.has(tmpPageNumber)) {\n      tmpPageNumber += step;\n    }\n    if (tmpPageNumber < 1 || tmpPageNumber > numPages) {\n      alert('can not find next search result');\n    } else {\n      jumpPage(tmpPageNumber);\n    }\n  };\n\n  useEffect(() => {\n    const keyupHandler = () => {\n      stopScroll();\n      setIsScrolling(false);\n    };\n    document.addEventListener('keyup', keyupHandler);\n    return () => {\n      document.removeEventListener('keyup', keyupHandler);\n    };\n  }, [setIsScrolling]);\n\n  const currentPageNumber = Math.floor((scrollOffset + height / 2) / itemSize) + 1;\n\n  const jumpPage = (targetPageNumber: number) => {\n    if (!Number.isInteger(targetPageNumber)) return;\n\n    if (targetPageNumber < 0) {\n      // -1 -> numPages\n      targetPageNumber += numPages + 1;\n    }\n    targetPageNumber = Math.max(1, Math.min(numPages, targetPageNumber));\n    listRef.current?.scrollToItem(targetPageNumber - 1);\n  };\n\n  // const [\n  //   _dummy,\n  //   outlineCommandCallbacks,\n  //   {onOutlineLoadSuccess},\n  // ] = useOutlineCommand({\n  //   pdf,\n  //   isModalOpen,\n  //   jumpPage,\n  //   outlineSelector,\n  // });\n\n  const scrollMax = numPages * itemSize + paddingSize - height;\n\n  const notImplemented = () => alert('sorry not implemented yet');\n\n  const commandCallbacks: CommandCallbacks = {\n    doNothing: () => {},\n\n    ...fullScreenCommandCallbacks,\n\n    showInfoOn: () => setShowInfo(true),\n    showInfoOff: () => setShowInfo(false),\n    showInfoToggle: () => setShowInfo(!showInfo),\n\n    prevPage: () => listRef.current?.scrollTo(Math.max(0, scrollOffset - repeatCount1 * itemSize))\n    ,\n    nextPage: () => listRef.current?.scrollTo(Math.min(scrollMax, scrollOffset + repeatCount1 * itemSize)),\n    firstPage: () => jumpPage(repeatCount1),\n    lastPage: () => jumpPage(repeatCount >= 1 ? repeatCount : -1),\n    goToPage: async () => {\n      if (isModalOpen) return;\n      jumpPage(Number(await inputBox.showInputBox({\n        prompt: 'input page number to go',\n      })));\n    },\n\n    zoomReset: () => setScale(1),\n    zoomIn: () => setScale(Math.min(scale + repeatCount1 * scaleStep, scaleMax)),\n    zoomOut: () => setScale(Math.max(scale - repeatCount1 * scaleStep, scaleMin)),\n    zoomFitWidth: () => setScale(width / (pageWidth / scale)),\n    zoomFitHeight: () => setScale(height / (pageHeight / scale)),\n\n    scrollLeft: () => startListOuterScroll({left: -scrollStep}),\n    scrollRight: () => startListOuterScroll({left: scrollStep}),\n    scrollUp: () => startListOuterScroll({top: -scrollStep}),\n    scrollDown: () => startListOuterScroll({top: scrollStep}),\n    scrollHalfPageUp: () => startListOuterScroll({top: -scrollHalfPageStep}),\n    scrollHalfPageDown: () => startListOuterScroll({top: scrollHalfPageStep}),\n    scrollTop: () => listRef.current?.scrollTo(paddingSize + itemSize * (currentPageNumber - 1)),\n    scrollBottom: () => listRef.current?.scrollTo(paddingSize - height + itemSize * currentPageNumber),\n\n    scrollReset: notImplemented,\n\n    rotateRight: () => setRotate((rotate + 90) % 360),\n    rotateLeft: () => setRotate((rotate + 360 - 90) % 360),\n\n    colorInvert: () => setIsColorInverted(!isColorInverted),\n    invertColorRateUp: () => setInvertColorRate(Math.min(invertColorRate + repeatCount1 * invertColorRateStep, 1)),\n    invertColorRateDown: () => setInvertColorRate(Math.max(invertColorRate - repeatCount1 * invertColorRateStep, 0)),\n\n    search,\n    searchNext: () => searchNext('forward'),\n    searchPrev: () => searchNext('backward'),\n    pickSearchList: notImplemented,\n    highlightToggle: () => setIsKeywordHighlighted(!isKeywordHighlighted),\n\n    goToOutline: () => goToOutline({outline, recursive: false}),\n    goToOutlineRecursive: () => goToOutline({outline, recursive: true}),\n\n    sidebarToggle: () => setIsSidebarOpen(!isSidebarOpen),\n\n    forwardPageHistory: notImplemented,\n    backwardPageHistory: notImplemented,\n\n    commandPaletteOpen: async () => {\n      if (isModalOpen) return;\n      const items = COMMANDS.map((command) => ({\n        name: commandToTitle(command),\n        command,\n        keys: keybindings[command],\n      }));\n\n      const item = await commandPalette.showQuickPick(items);\n      if (item?.command) {\n        commandCallbacksRef.current?.[item.command]?.();\n      }\n    },\n\n    fileOpen: () => dropzoneRef?.current?.open(),\n  };\n\n  commandCallbacksRef.current = commandCallbacks;\n  useKeybindings<AllCommandList>({\n    keybindings, commandCallbacks, commands: COMMANDS,\n    onAfterCommand: resetRepeatCount,\n  });\n\n  const itemData: PageRendererDataType = {\n    scale,\n    rotate,\n    isKeywordHighlighted,\n    keyword,\n    paddingSize,\n    isScrolling,\n    pageWidth,\n  };\n\n  if (!url) {\n    return (\n      <DropFileArea\n        onDropFile={(file: File) => setUrl(URL.createObjectURL(file))}\n        dropzoneRef={dropzoneRef}\n      >\n        <LandingPage\n          keybindings={keybindings}\n        />\n      </DropFileArea>\n    );\n  }\n  return (\n    <DropFileArea\n      onDropFile={(file: File) => setUrl(URL.createObjectURL(file))}\n      dropzoneRef={dropzoneRef}\n    >\n      <div\n        style={{\n          background: 'gray',\n          filter: isColorInverted ? `invert(${invertColorRate})` : '',\n        }}\n      >\n        <Document\n          inputRef={docRef}\n          file={url}\n          onLoadSuccess={onDocumentLoadSuccess}\n          options={{\n            cMapUrl: 'cmaps/',\n            cMapPacked: true,\n          }}\n          loading={<div>loading...</div>}\n          onItemClick={({pageNumber}) => {jumpPage(Number(pageNumber))}}\n        >\n          <SideBar\n            onItemClick={({pageNumber}) => {jumpPage(Number(pageNumber))}}\n            onLoadSuccess={(outline: OutlineNode[]) => {setOutline(outline)}}\n            isOpen={isSidebarOpen}\n          />\n          <List\n            height={height}\n            itemCount={numPages}\n            itemSize={itemSize}\n            width={width}\n            overscanCount={2}\n            itemData={itemData}\n            onScroll={({scrollOffset}) => setScrollOffset(scrollOffset)}\n            ref={listRef}\n            outerRef={listOuterRef}\n          >\n            {PageRenderer}\n          </List>\n        </Document>\n        {\n          showInfo\n          &&\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              backgroundColor: 'rgba(255, 255, 255, 0.5)',\n            }}\n          >\n            <pre><code>\n              state = {\n                JSON.stringify({\n                  url,\n                  height,\n                  width,\n                  page: `${currentPageNumber}/${numPages}`,\n                  scale,\n                  pageWidthRaw,\n                  pageHeightRaw,\n                  pageHeight,\n                  isSidebarOpen,\n                  pdfLoaded: pdf !== null,\n                  scrollOffset,\n                  isColorInverted,\n                  invertColorRate,\n                  rotate,\n                  repeatCount,\n                }, null, '  ')\n              }\n            </code></pre>\n          </div>\n        }\n      </div>\n    </DropFileArea>\n  );\n}\n\nexport {\n  KFPDFViewer\n};\n","const isDev = process.env.NODE_ENV === 'development';\n\nexport {\n  isDev,\n};\n","import {useState, useEffect} from 'react';\n\nconst REPEAT_MAX = 999;\nconst NO_REPEAT = -1;\n\n// some command accept `repeatCount` to repeat the command.\nconst useRepeatCommand = () => {\n  // NOTE: `-1` means `repeatCount is not specified`\n  const [repeatCount, setRepeatCount] = useState(NO_REPEAT);\n\n  useEffect(() => {\n\n    const keypressHandler = (event: KeyboardEvent) => {\n      if ('0123456789'.includes(event.key)) {\n        const num = Number(event.key);\n        setRepeatCount((currentRepeatCount) => {\n          return Math.min(10 * Math.max(currentRepeatCount, 0) + num, REPEAT_MAX);\n        });\n      }\n    };\n\n    const keyupHandler = (event: KeyboardEvent) => {\n      // NOTE: resetRepeatCount must be called after\n      // keypress event of command.\n      if (!('0123456789'.includes(event.key))) {\n        setRepeatCount(NO_REPEAT);\n      }\n    };\n\n    document.addEventListener('keypress', keypressHandler);\n    document.addEventListener('keyup', keyupHandler);\n\n    return () => {\n      document.removeEventListener('keypress', keypressHandler);\n      document.removeEventListener('keyup', keyupHandler);\n    };\n  }, []);\n\n  const resetRepeatCount = () => {\n    setRepeatCount(NO_REPEAT);\n  };\n\n  return [\n    repeatCount,\n    resetRepeatCount,\n  ] as const;\n};\n\nexport {\n  useRepeatCommand,\n  NO_REPEAT,\n};\n","import {useState, useEffect, useRef, useCallback, CSSProperties} from 'react';\nimport {FullScreen, useFullScreenHandle} from 'react-full-screen';\nimport {KFPDFViewer} from './KFPDFViewer';\nimport { CommandPaletteProvider } from './CommandPaletteContext';\nimport { OutlineSelectorProvider } from './OutlineSelectorContext';\nimport { InputBoxProvider } from './InputBoxContext';\nimport {debounce} from 'throttle-debounce';\n\ninterface AppProps {\n}\n\nconst App: React.FC<AppProps> = () => {\n  const modalRootRef = useRef(null);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(document.documentElement.clientWidth);\n  const [screenHeight, setScreenHeight] = useState(document.documentElement.clientHeight);\n\n  useEffect(() => {\n    const onResize = debounce(250, () => {\n      setScreenWidth(document.documentElement.clientWidth);\n      setScreenHeight(document.documentElement.clientHeight);\n    });\n    // TODO: orientationchange event\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    }\n  }, []);\n\n\n  const fullScrenHandle = useFullScreenHandle();\n\n  const fullScreenOn = useCallback(() => {\n    if (!fullScreen) {\n      fullScrenHandle.enter();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const fullScreenOff = useCallback(() => {\n    if (fullScreen) {\n      fullScrenHandle.exit();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const fullScreenToggle = useCallback(() => {\n    if (fullScreen) {\n      fullScrenHandle.exit();\n    } else {\n      fullScrenHandle.enter();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const divStyle: CSSProperties = fullScreen\n    ? {\n      width: '100%',\n      height: '100%',\n    }\n    : {\n      width: screenWidth,\n      height: screenHeight,\n    };\n\n  const parentSelector = () => {\n    if(modalRootRef.current) {\n      return modalRootRef.current;\n    } else {\n      return document.body;\n    }\n  };\n\n  const fullScreenCommandCallbacks = {\n    fullScreenOn,\n    fullScreenOff,\n    fullScreenToggle,\n  };\n\n  return (\n    <FullScreen\n      handle={fullScrenHandle}\n      onChange={setFullScreen}\n    >\n      <div ref={modalRootRef}>\n        <CommandPaletteProvider\n          parentSelector={parentSelector}\n        >\n          <OutlineSelectorProvider\n            parentSelector={parentSelector}\n          >\n            <InputBoxProvider\n              parentSelector={parentSelector}\n            >\n              <div\n                style={divStyle}\n              >\n                <KFPDFViewer\n                  fullScreenCommandCallbacks={fullScreenCommandCallbacks}\n                  height={screenHeight}\n                  width={screenWidth}\n                />\n              </div>\n            </InputBoxProvider>\n          </OutlineSelectorProvider>\n        </CommandPaletteProvider>\n      </div>\n    </FullScreen>\n  );\n}\n\nexport {\n  App\n};\n","import 'normalize.css';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}